#!/usr/bin/env python
# -*- coding: utf8 -*-

PACKAGE = "volti"
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

gen.add("kp0rps_pos",  double_t, 0, "kp at 0 rps, out+=kp*err",         0,   0, 300)
gen.add("kp1rps_pos",  double_t, 0, "kp at 1 rps, out+=kp*err",         0,   0, 300)

gen.add("ki_pos",      double_t, 0, "ki, out+=ki*sum(err)",             0,   0, 30)
gen.add("kd_pos",      double_t, 0, "kd, out+=kd*diff(err)",            0,   0, 30)
gen.add("ka_pos",      double_t, 0, "ka, out+=ka*diff2(err)",           0,   0, 30)
gen.add("ks_pos",      double_t, 0, "ks, out+=ks*sin(err)",             0,   0, 30)

gen.add("umbral_pos",  double_t, 0, "if err<umbral then err=0",         0,   0, 1)
gen.add("umbral_int",  double_t, 0, "if err<umbral then sum=0",         0,   0, 1)
gen.add("umbral_oof",  double_t, 0, "range the sistem goes +-5%",       0,   0, 1)

gen.add("div_minimal", double_t, 0, "exp reduce +5pc floor w/speed",   30,   1, 60)
gen.add("div_ang2vel", double_t, 0, "div ang contrib at pid_vel",       0,   1, 60)

gen.add("range_pos",   double_t, 0, "max pwm in mode",                  0,   0, 30)

################################################################################

gen.add("kp_vel",      double_t, 0, "kp, out+=kp*err",                  0,   0, 300)

gen.add("ki_vel",      double_t, 0, "ki, out+=ki*sum(err)",             0,   0, 30)
gen.add("kd_vel",      double_t, 0, "kd, out+=kd*diff(err)",            0,   0, 30)
gen.add("km_vel",      double_t, 0, "km, out+=km*des",                  0,   0, 300)
gen.add("ka_vel",      double_t, 0, "ka, out+=ka*diff2(err)",           0,   0, 30)
gen.add("ks_vel",      double_t, 0, "ks, out+=ks*sin(err)",             0,   0, 30)

gen.add("umbral_vel",  double_t, 0, "if err<umbral then err=0",         0,   0, 1)

gen.add("range_vel",   double_t, 0, "max pwm in mode",                  0,   0, 30)

################################################################################

gen.add("P0", 	double_t, 0, "P0",    10, 0, 100)
gen.add("Q", 	double_t, 0, "Q",     10, 0, 100)
gen.add("R",    double_t, 0, "R",     10, 0, 100)
gen.add("rate", double_t, 0, "rate",  10, 0, 100)

################################################################################

exit(gen.generate(PACKAGE, "volti", "VOL"))

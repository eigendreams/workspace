#!/usr/bin/env python
PACKAGE = "volti"
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

gen.add("kp_pos", double_t, 0, "kp, out+=kp*err",       70, 0, 100)
gen.add("ki_pos", double_t, 0, "ki, out+=ki*sum(err)",  0, 0, 100)
gen.add("kd_pos", double_t, 0, "kd, out+=kd*diff(err)", 0, 0, 10)
gen.add("km_pos", double_t, 0, "km, out+=km*des",       0, 0, 100)

gen.add("umbral_pos", double_t, 0, "if err<umbral then err=0 ",         0.5,  -1, 1)
gen.add("ki_dec_pos",    int_t, 0, "ki reverse penalty mode",           0,   0, 100)
gen.add("range_pos",  double_t, 0, "max pwm in mode",                  70,   0, 100)

gen.add("kp_vel", double_t, 0, "kp, out+=kp*err",      70, 0, 100)
gen.add("ki_vel", double_t, 0, "ki, out+=ki*sum(err)",  0, 0, 100)
gen.add("kd_vel", double_t, 0, "kd, out+=kd*diff(err)", 0, 0, 10)
gen.add("km_vel", double_t, 0, "km, out+=km*des",       0, 0, 100)

gen.add("umbral_vel", double_t, 0, "if err<umbral then err=0 ",         0.5,  -1, 1)
gen.add("ki_dec_vel",    int_t, 0, "ki reverse penalty mode",           0,   0, 100)
gen.add("range_vel",  double_t, 0, "max pwm in mode",                  70,   0, 100)

exit(gen.generate(PACKAGE, "volti", "PID"))